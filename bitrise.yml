format_version: 4
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git

app:
  envs:
  - STEP_VERSION: 1.2.4
  - ORIG_BITRISE_SOURCE_DIR: $BITRISE_SOURCE_DIR

workflows:
  test:
    before_run:
    - audit-this-step
    steps:
    - go-list:
    - golint:
    - errcheck:
    - go-test:
    - nvm@1.2.2:
        inputs:
        - node_version: 10.13.0
    after_run:
    - test-with-npm
    - test-with-npm-no-platform-add
    - test-with-yarn

  test-with-npm:
    envs:
    - SAMPLE_APP_URL: https://github.com/bitrise-samples/ionic-conference-app.git
    - BRANCH: update
    - READD_PLATFORM: true
    - USE_NPM: true
    after_run:
    - _common

  test-with-npm-no-platform-add:
    envs:
    - SAMPLE_APP_URL: https://github.com/bitrise-samples/ionic-conference-app.git
    - BRANCH: update
    - READD_PLATFORM: false
    - USE_NPM: true
    after_run:
    - _common

  test-with-yarn:
    envs:
    - SAMPLE_APP_URL: https://github.com/bitrise-samples/ionic-conference-app.git
    - BRANCH: yarn-test-preadded-platforms
    - READD_PLATFORM: false
    - USE_NPM: false
    after_run:
    - _common

  _common:
    steps:
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            set -e
            set -v
            rm -rf ./_tmp
    - change-workdir:
        title: Switch working dir to ./_tmp dir
        run_if: true
        inputs:
        - path: ./_tmp
        - is_create_path: true
    - script:
        inputs:
        - content: |-
            #!/usr/bin/env bash
            if [[ -z "${SAMPLE_APP_URL}" ]]; then
              echo "error: there is no SAMPLE_APP_URL env var specified"
              exit 1
            elif [[ -z "${COMMIT}" && -z "${BRANCH}" ]]; then
              echo "error: can't checkout: there is no BRANCH or COMMIT env var specified"
              exit 1
            fi
            git init
            git remote add origin "${SAMPLE_APP_URL}"
            git fetch || exit 1
            [[ -n "${COMMIT}" ]] && git checkout "${COMMIT}" || git checkout "${BRANCH}"
    - script:
        inputs:
        - content: |-
            #!/usr/bin/env bash
            rm -rf node_modules; rm package-lock.json || true
            rm -rf platforms
    - npm:
        # run_if: '{{enveq "USE_NPM" "true"}}'
        inputs:
        - workdir: ./
        - command: install
    - script:
        run_if: '{{enveq "USE_NPM" "false"}}'
        inputs:
        - content: rm -rf node_modules; rm package-lock.json
    - yarn:
        run_if: '{{enveq "USE_NPM" "false"}}'
        inputs:
        - workdir: ./
        - command: install
    - path::./:
        title: Step Test
        inputs:
        - workdir: ./
        - target: emulator
        - platform: ios,android
        - ionic_version: latest
        - ionic_username: $IONIC_USERNAME
        - ionic_password: $IONIC_PASSWORD
        - options: --verbose -- --buildFlag="-UseModernBuildSystem=0"
        - add_platform: ${READD_PLATFORM}
        - readd_platform: ${READD_PLATFORM}
    - change-workdir:
        title: Switch back to original working directory
        inputs:
        - path: ${ORIG_BITRISE_SOURCE_DIR}

  # ----------------------------------------------------------------
  # --- Utility workflows
  dep-update:
    title: Dep update
    description: |
      Used for updating bitrise dependencies with dep
    steps:
    - script:
        title: Dependency update
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            go get -u -v github.com/golang/dep/cmd/dep
            dep ensure -v
            dep ensure -v -update

  # ----------------------------------------------------------------
  # --- workflows to Share this step into a Step Library
  audit-this-step:
    steps:
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            stepman audit --step-yml ./step.yml
